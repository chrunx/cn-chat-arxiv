{
    "title": "Functional Overlap Reranking for Neural Code Generation",
    "abstract": "arXiv:2311.03366v4 Announce Type: replace-cross  Abstract: Code Large Language Models (CodeLLMs) have ushered in a new era in code generation advancements. However, selecting the best code solutions from all possible CodeLLM outputs remains a challenge. Previous methods often overlooked the intricate functional similarities and interactions between solution clusters. We introduce SRank, a novel reranking strategy for selecting the best solutions from code generation, focusing on modeling the relationships between clusters of solutions. By quantifying the functional overlap between solution clusters, our approach provides a better ranking strategy for code solutions. Empirical results show that our method achieves remarkable results on the pass@1 score. For instance, on the Human-Eval benchmark, we achieve 69.66% in pass@1 with Codex002, 75.31% with WizardCoder, 53.99% with StarCoder, and 60.55% with CodeGen, surpassing state-of-the-art code generation reranking methods such as CodeT an",
    "link": "https://arxiv.org/abs/2311.03366",
    "context": "Title: Functional Overlap Reranking for Neural Code Generation\nAbstract: arXiv:2311.03366v4 Announce Type: replace-cross  Abstract: Code Large Language Models (CodeLLMs) have ushered in a new era in code generation advancements. However, selecting the best code solutions from all possible CodeLLM outputs remains a challenge. Previous methods often overlooked the intricate functional similarities and interactions between solution clusters. We introduce SRank, a novel reranking strategy for selecting the best solutions from code generation, focusing on modeling the relationships between clusters of solutions. By quantifying the functional overlap between solution clusters, our approach provides a better ranking strategy for code solutions. Empirical results show that our method achieves remarkable results on the pass@1 score. For instance, on the Human-Eval benchmark, we achieve 69.66% in pass@1 with Codex002, 75.31% with WizardCoder, 53.99% with StarCoder, and 60.55% with CodeGen, surpassing state-of-the-art code generation reranking methods such as CodeT an",
    "path": "papers/23/11/2311.03366.json",
    "total_tokens": 403,
    "tldr": "该文章提出了SRank，一种针对神经代码生成器的解决方案重新排序策略，通过量化解决方案集群之间的功能重叠，改进了代码解决方案的排名。在Human-Eval基准测试中，对于Codex002、WizardCoder、StarCoder和CodeGen等模型，该策略在pass@1分数上取得了显著提升，超过了当前最先进的代码生成重新排序方法，如CodeT and CodeBERTa。"
}