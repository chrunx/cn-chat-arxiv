{
    "title": "A General Ambiguity Model for Binary Edge Images with Edge Tracing and its Implementation",
    "abstract": "arXiv:2408.01712v1 Announce Type: new  Abstract: We present a general and intuitive ambiguity model for intersections, junctions and other structures in binary edge images. The model is combined with edge tracing, where edges are ordered sequences of connected pixels. The objective is to provide a versatile preprocessing method for tasks such as figure-ground segmentation, object recognition, topological analysis, etc. By using only a small set of straightforward principles, the results are intuitive to describe. This helps to implement subsequent processing steps, such as resolving ambiguous edge connections at junctions. By using an augmented edge map, neighboring edges can be directly accessed using quick local search operations. The edge tracing uses recursion, which leads to compact programming code. We explain our algorithm using pseudocode, compare it with related methods, and show how simple modular postprocessing steps can be used to optimize the results. The complete algorith",
    "link": "https://arxiv.org/abs/2408.01712",
    "context": "Title: A General Ambiguity Model for Binary Edge Images with Edge Tracing and its Implementation\nAbstract: arXiv:2408.01712v1 Announce Type: new  Abstract: We present a general and intuitive ambiguity model for intersections, junctions and other structures in binary edge images. The model is combined with edge tracing, where edges are ordered sequences of connected pixels. The objective is to provide a versatile preprocessing method for tasks such as figure-ground segmentation, object recognition, topological analysis, etc. By using only a small set of straightforward principles, the results are intuitive to describe. This helps to implement subsequent processing steps, such as resolving ambiguous edge connections at junctions. By using an augmented edge map, neighboring edges can be directly accessed using quick local search operations. The edge tracing uses recursion, which leads to compact programming code. We explain our algorithm using pseudocode, compare it with related methods, and show how simple modular postprocessing steps can be used to optimize the results. The complete algorith",
    "path": "papers/24/08/2408.01712.json",
    "total_tokens": 425,
    "tldr": "该文章提出了一种用于二值边缘图像中交点、接点和其它结构的一般且直观的模糊度模型，结合了边缘追踪技术。该方法利用了边缘的有序像素序列，旨在为诸如边界线划分、对象识别、拓扑分析和其它任务提供一种通用的预处理方法。通过使用一系列简单直观的原则，本文展示了如何通过伪代码来描述和实现后续的处理步骤，这些步骤有助于解决接点处的边缘连接问题。此外，通过使用扩充的边缘地图，相邻的边缘可以通过快速局部搜索操作得到访问，边缘追踪过程中使用了递归技术，使得编码简洁。通过与相关方法的对比分析和优化结果的展示，该文章提供了算法的完整描述。"
}