{
    "title": "A General Ambiguity Model for Binary Edge Images with Edge Tracing and its Implementation",
    "abstract": "arXiv:2408.01712v1 Announce Type: new  Abstract: We present a general and intuitive ambiguity model for intersections, junctions and other structures in binary edge images. The model is combined with edge tracing, where edges are ordered sequences of connected pixels. The objective is to provide a versatile preprocessing method for tasks such as figure-ground segmentation, object recognition, topological analysis, etc. By using only a small set of straightforward principles, the results are intuitive to describe. This helps to implement subsequent processing steps, such as resolving ambiguous edge connections at junctions. By using an augmented edge map, neighboring edges can be directly accessed using quick local search operations. The edge tracing uses recursion, which leads to compact programming code. We explain our algorithm using pseudocode, compare it with related methods, and show how simple modular postprocessing steps can be used to optimize the results. The complete algorith",
    "link": "https://arxiv.org/abs/2408.01712",
    "context": "Title: A General Ambiguity Model for Binary Edge Images with Edge Tracing and its Implementation\nAbstract: arXiv:2408.01712v1 Announce Type: new  Abstract: We present a general and intuitive ambiguity model for intersections, junctions and other structures in binary edge images. The model is combined with edge tracing, where edges are ordered sequences of connected pixels. The objective is to provide a versatile preprocessing method for tasks such as figure-ground segmentation, object recognition, topological analysis, etc. By using only a small set of straightforward principles, the results are intuitive to describe. This helps to implement subsequent processing steps, such as resolving ambiguous edge connections at junctions. By using an augmented edge map, neighboring edges can be directly accessed using quick local search operations. The edge tracing uses recursion, which leads to compact programming code. We explain our algorithm using pseudocode, compare it with related methods, and show how simple modular postprocessing steps can be used to optimize the results. The complete algorith",
    "path": "papers/24/08/2408.01712.json",
    "total_tokens": 619,
    "translated_title": "二值边缘图像的通用模糊模型，结合了边缘追踪及其实现",
    "translated_abstract": "在本次研究中，我们提出了一种适用于二值边缘图像中的交叉点、接合和其他结构的一般且直观的模糊模型。该模型与边缘追踪技术结合，其中边缘被看作是一系列连接的像素有序序列。我们的目标是提供一种通用的预处理方法，用于诸如图底分割、物体识别、拓扑分析等方面的任务。通过仅使用一系列简单的原则，结果描述起来直观易懂，有助于后续处理步骤的实现，如在接合处解决边缘连接的模糊问题。通过使用扩大的边缘图，可以利用快速的局部搜索操作直接访问相邻的边缘。我们的边缘追踪算法采用了递归技术，这简化了编程代码。随后我们将用伪代码详细介绍我们的算法，并与相关方法进行比较，并展示如何使用简单的模块化后处理步骤来优化结果。我们算法的完整性欢迎有兴趣的用户和研究人员进行测试和评估。",
    "tldr": "该研究提出了一款适用于二值边缘图像模糊结构的一般模型，结合了边缘追踪技术，并解释了算法以实现后续任务的处理优化。",
    "en_tdlr": "This study introduces a general ambiguity model for structures in binary edge images, combining edge tracing techniques to address subsequent task processing optimizations."
}