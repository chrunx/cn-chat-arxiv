{
    "title": "From LLMs to LLM-based Agents for Software Engineering: A Survey of Current, Challenges and Future",
    "abstract": "arXiv:2408.02479v1 Announce Type: cross  Abstract: With the rise of large language models (LLMs), researchers are increasingly exploring their applications in var ious vertical domains, such as software engineering. LLMs have achieved remarkable success in areas including code generation and vulnerability detection. However, they also exhibit numerous limitations and shortcomings. LLM-based agents, a novel tech nology with the potential for Artificial General Intelligence (AGI), combine LLMs as the core for decision-making and action-taking, addressing some of the inherent limitations of LLMs such as lack of autonomy and self-improvement. Despite numerous studies and surveys exploring the possibility of using LLMs in software engineering, it lacks a clear distinction between LLMs and LLM based agents. It is still in its early stage for a unified standard and benchmarking to qualify an LLM solution as an LLM-based agent in its domain. In this survey, we broadly investigate the current p",
    "link": "https://arxiv.org/abs/2408.02479",
    "context": "Title: From LLMs to LLM-based Agents for Software Engineering: A Survey of Current, Challenges and Future\nAbstract: arXiv:2408.02479v1 Announce Type: cross  Abstract: With the rise of large language models (LLMs), researchers are increasingly exploring their applications in var ious vertical domains, such as software engineering. LLMs have achieved remarkable success in areas including code generation and vulnerability detection. However, they also exhibit numerous limitations and shortcomings. LLM-based agents, a novel tech nology with the potential for Artificial General Intelligence (AGI), combine LLMs as the core for decision-making and action-taking, addressing some of the inherent limitations of LLMs such as lack of autonomy and self-improvement. Despite numerous studies and surveys exploring the possibility of using LLMs in software engineering, it lacks a clear distinction between LLMs and LLM based agents. It is still in its early stage for a unified standard and benchmarking to qualify an LLM solution as an LLM-based agent in its domain. In this survey, we broadly investigate the current p",
    "path": "papers/24/08/2408.02479.json",
    "total_tokens": 389,
    "tldr": "该文章主要创新和贡献是系统性地回顾了大型语言模型在软件工程领域的应用，并探讨了将LLMs转化为可以执行决策和行动的LLM-based Agents的可能性与挑战。通过分析现有工作，本文预测了这一领域未来的发展方向，并指出了在建立统一标准和基准以评估LLM解决方案作为LLM-based Agent方面的潜在不足，为进一步的研究和应用提供了重要的参考。"
}