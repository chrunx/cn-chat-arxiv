{
    "title": "From LLMs to LLM-based Agents for Software Engineering: A Survey of Current, Challenges and Future",
    "abstract": "arXiv:2408.02479v1 Announce Type: cross  Abstract: With the rise of large language models (LLMs), researchers are increasingly exploring their applications in var ious vertical domains, such as software engineering. LLMs have achieved remarkable success in areas including code generation and vulnerability detection. However, they also exhibit numerous limitations and shortcomings. LLM-based agents, a novel tech nology with the potential for Artificial General Intelligence (AGI), combine LLMs as the core for decision-making and action-taking, addressing some of the inherent limitations of LLMs such as lack of autonomy and self-improvement. Despite numerous studies and surveys exploring the possibility of using LLMs in software engineering, it lacks a clear distinction between LLMs and LLM based agents. It is still in its early stage for a unified standard and benchmarking to qualify an LLM solution as an LLM-based agent in its domain. In this survey, we broadly investigate the current p",
    "link": "https://arxiv.org/abs/2408.02479",
    "context": "Title: From LLMs to LLM-based Agents for Software Engineering: A Survey of Current, Challenges and Future\nAbstract: arXiv:2408.02479v1 Announce Type: cross  Abstract: With the rise of large language models (LLMs), researchers are increasingly exploring their applications in var ious vertical domains, such as software engineering. LLMs have achieved remarkable success in areas including code generation and vulnerability detection. However, they also exhibit numerous limitations and shortcomings. LLM-based agents, a novel tech nology with the potential for Artificial General Intelligence (AGI), combine LLMs as the core for decision-making and action-taking, addressing some of the inherent limitations of LLMs such as lack of autonomy and self-improvement. Despite numerous studies and surveys exploring the possibility of using LLMs in software engineering, it lacks a clear distinction between LLMs and LLM based agents. It is still in its early stage for a unified standard and benchmarking to qualify an LLM solution as an LLM-based agent in its domain. In this survey, we broadly investigate the current p",
    "path": "papers/24/08/2408.02479.json",
    "total_tokens": 691,
    "translated_title": "从大型语言模型到基于大型语言模型的软件工程代理：当前挑战和未来调查",
    "translated_abstract": "arXiv:2408.02479v1 公告类型：交叉  摘要：随着大型语言模型（LLMs）的兴起，研究人员越来越多地探索其在各个垂直领域的应用，例如软件工程。LLMs已在包括代码生成和漏洞检测在内的领域取得显著成功。然而，它们也表现出许多限制和不足。LLM-based代理是一种新技术，具有成为人工通用智能（AGI）的潜力，它将LLM作为核心进行决策和行动，解决了LLM缺乏自主性和自我改进的一些固有局限性。尽管许多研究和小结探讨了在软件工程中使用LLM的可能性，但它们缺乏对LLM和基于LLM的代理之间区别的明确区分。该领域仍然处于其统一标准和基准测试的早期阶段，这些标准和测试旨在确定一个LLM解决方案是否可以被认可为一个在它的领域中的LLM-based代理。在这项调查中，我们广泛地研究了当前的问题以及未来发展的挑战，并探讨了对LLM-based代理在软件工程中的应用的展望。",
    "tldr": "这篇论文调查了大型语言模型在软件工程中的应用，以及基于大型语言模型的代理（可能具有人工通用智能潜力）的优势和挑战。"
}