{
    "title": "LLM as Runtime Error Handler: A Promising Pathway to Adaptive Self-Healing of Software Systems",
    "abstract": "arXiv:2408.01055v1 Announce Type: cross  Abstract: Unanticipated runtime errors, lacking predefined handlers, can abruptly terminate execution and lead to severe consequences, such as data loss or system crashes. Despite extensive efforts to identify potential errors during the development phase, such unanticipated errors remain a challenge to to be entirely eliminated, making the runtime mitigation measurements still indispensable to minimize their impact. Automated self-healing techniques, such as reusing existing handlers, have been investigated to reduce the loss coming through with the execution termination. However, the usability of existing methods is retained by their predefined heuristic rules and they fail to handle diverse runtime errors adaptively. Recently, the advent of Large Language Models (LLMs) has opened new avenues for addressing this problem. Inspired by their remarkable capabilities in understanding and generating code, we propose to deal with the runtime errors i",
    "link": "https://arxiv.org/abs/2408.01055",
    "context": "Title: LLM as Runtime Error Handler: A Promising Pathway to Adaptive Self-Healing of Software Systems\nAbstract: arXiv:2408.01055v1 Announce Type: cross  Abstract: Unanticipated runtime errors, lacking predefined handlers, can abruptly terminate execution and lead to severe consequences, such as data loss or system crashes. Despite extensive efforts to identify potential errors during the development phase, such unanticipated errors remain a challenge to to be entirely eliminated, making the runtime mitigation measurements still indispensable to minimize their impact. Automated self-healing techniques, such as reusing existing handlers, have been investigated to reduce the loss coming through with the execution termination. However, the usability of existing methods is retained by their predefined heuristic rules and they fail to handle diverse runtime errors adaptively. Recently, the advent of Large Language Models (LLMs) has opened new avenues for addressing this problem. Inspired by their remarkable capabilities in understanding and generating code, we propose to deal with the runtime errors i",
    "path": "papers/24/08/2408.01055.json",
    "total_tokens": 605,
    "translated_title": "基于LLMs的软件系统自愈能力：应对运行时错误的适应性解决策略",
    "translated_abstract": "arXiv:2408.01055v1 公告类型：交叉 摘要：在软件系统的运行时，无法预料的错误可能会导致程序突然终止执行，从而引发严重后果，如数据丢失或系统崩溃。尽管开发阶段会尝试识别潜在错误，但此类预料之外的错误仍难以完全消除，因此，执行时采用缓解措施仍是减少其影响的关键。自动化的自愈技术，如重用现有的错误处理器，已被研究用于降低执行终止带来的损失。然而，现有方法的使用性受限于它们的预设启发式规则，它们在应对多样化的运行时错误时表现不佳。最近，大型语言模型（LLMs）的出现为解决这一问题开辟了新途径。受其卓越的能力启发，我们提出了一种利用LLMs来处理运行时错误的方法。",
    "tldr": "一种基于LLMs的新方法可以自适应地处理软件系统的运行时错误，提高系统的自我恢复能力。"
}